package com.ai.reference;

/**
 * Generic token type generated by an instance of a LexicalAnalyzer. This interface defines the minimal behavior for a token generated during the lexical analysis phase of parsing. Specifically, token is a thing that:

    * Has a type -- describing what category a given token comes from (e.g., STRING vs INTEGER vs RESERVED_WORD, etc.)
    * Has content -- the literal string that was matched when generating this token. 
    * 
 * @author Terran Lane
 *
 */
public interface Token<T extends Enum<T> & HasPattern> {

	/**
	 * The literal string matched when generating this token instance. Possibly null or the empty string for EOF. (Whether null is an acceptable token content is implementation-dependent.) 
	 * @return string data
	 */
	public String getContent();
	
	/**
	 * The literal string matched when generating this token instance. Possibly null or the empty string for EOF. (Whether null is an acceptable token content is implementation-dependent.) 
	 * @return type of token
	 */
	public T getType();
}
