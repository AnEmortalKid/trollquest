<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0) on Thu Dec 15 12:16:38 MST 2011 -->
<title>ConcreteToken</title>
<meta name="date" content="2011-12-15">
<link rel="stylesheet" type="text/css" href="../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ConcreteToken";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ConcreteToken.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../com/ai/CharSeqFile.html" title="class in com.ai"><span class="strong">Prev Class</span></a></li>
<li><a href="../../com/ai/NanoLexer.html" title="class in com.ai"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?com/ai/ConcreteToken.html" target="_top">Frames</a></li>
<li><a href="ConcreteToken.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">com.ai</div>
<h2 title="Class ConcreteToken" class="title">Class ConcreteToken&lt;T extends java.lang.Enum&lt;T&gt; & <a href="../../com/ai/reference/HasPattern.html" title="interface in com.ai.reference">HasPattern</a>&gt;</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>com.ai.ConcreteToken&lt;T&gt;</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl><dt><span class="strong">Type Parameters:</span></dt><dd><code>T</code> - is the type of token. In all Nano project, this type is a specific index in <a href="../../com/ai/NanoTokens.html" title="enum in com.ai"><code>NanoTokens</code></a></dd></dl>
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../com/ai/reference/Token.html" title="interface in com.ai.reference">Token</a>&lt;T&gt;</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">ConcreteToken&lt;T extends java.lang.Enum&lt;T&gt; & <a href="../../com/ai/reference/HasPattern.html" title="interface in com.ai.reference">HasPattern</a>&gt;</span>
extends java.lang.Object
implements <a href="../../com/ai/reference/Token.html" title="interface in com.ai.reference">Token</a>&lt;T&gt;</pre>
<div class="block">This is a simple class for building concrete tokens</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Martin Tice</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../com/ai/ConcreteToken.html#ConcreteToken(T, java.lang.String)">ConcreteToken</a></strong>(<a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a>&nbsp;t,
             java.lang.String&nbsp;content)</code>
<div class="block">Constructor wraps getter methods of both type and content to a given type and content of a token</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../../com/ai/ConcreteToken.html#getContent()">getContent</a></strong>()</code>
<div class="block">The literal string matched when generating this token instance.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a></code></td>
<td class="colLast"><code><strong><a href="../../com/ai/ConcreteToken.html#getType()">getType</a></strong>()</code>
<div class="block">The literal string matched when generating this token instance.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ConcreteToken(java.lang.Enum,java.lang.String)">
<!--   -->
</a><a name="ConcreteToken(T, java.lang.String)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ConcreteToken</h4>
<pre>public&nbsp;ConcreteToken(<a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a>&nbsp;t,
             java.lang.String&nbsp;content)</pre>
<div class="block">Constructor wraps getter methods of both type and content to a given type and content of a token</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>t</code> - specific <a href="../../com/ai/NanoTokens.html" title="enum in com.ai"><code>NanoTokens</code></a> type</dd><dd><code>content</code> - actual String content of token.</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getContent()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getContent</h4>
<pre>public&nbsp;java.lang.String&nbsp;getContent()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../../com/ai/reference/Token.html#getContent()">Token</a></code></strong></div>
<div class="block">The literal string matched when generating this token instance. Possibly null or the empty string for EOF. (Whether null is an acceptable token content is implementation-dependent.)</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../com/ai/reference/Token.html#getContent()">getContent</a></code>&nbsp;in interface&nbsp;<code><a href="../../com/ai/reference/Token.html" title="interface in com.ai.reference">Token</a>&lt;<a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a> extends java.lang.Enum&lt;<a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a>&gt; & <a href="../../com/ai/reference/HasPattern.html" title="interface in com.ai.reference">HasPattern</a>&gt;</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>String the content that the token returns</dd></dl>
</li>
</ul>
<a name="getType()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getType</h4>
<pre>public&nbsp;<a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a>&nbsp;getType()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code><a href="../../com/ai/reference/Token.html#getType()">Token</a></code></strong></div>
<div class="block">The literal string matched when generating this token instance. Possibly null or the empty string for EOF. (Whether null is an acceptable token content is implementation-dependent.)</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href="../../com/ai/reference/Token.html#getType()">getType</a></code>&nbsp;in interface&nbsp;<code><a href="../../com/ai/reference/Token.html" title="interface in com.ai.reference">Token</a>&lt;<a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a> extends java.lang.Enum&lt;<a href="../../com/ai/ConcreteToken.html" title="type parameter in ConcreteToken">T</a>&gt; & <a href="../../com/ai/reference/HasPattern.html" title="interface in com.ai.reference">HasPattern</a>&gt;</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>T the type of the token</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ConcreteToken.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../index-files/index-1.html">Index</a></li>
<li><a href="../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../../com/ai/CharSeqFile.html" title="class in com.ai"><span class="strong">Prev Class</span></a></li>
<li><a href="../../com/ai/NanoLexer.html" title="class in com.ai"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../index.html?com/ai/ConcreteToken.html" target="_top">Frames</a></li>
<li><a href="ConcreteToken.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
